// def gv // Declare the gv variable

// pipeline {
//     agent any

//     parameters {
//         choice(name: 'VERSION', choices:['1.1.0', '1.2.0', '1.3.0'], description: '')
//         booleanParam(name: 'executeTests', defaultValue: true, description: '' )
//     }

//     stages {
//         stage("init") {
//             steps {
//                 script {
//                     gv = load "script.groovy" // Load script.groovy into gv
//                     gv.buildApp()
//                     echo "Value of gv: ${gv}"
//                 }
//             }
//         }

//         stage("Build") {
//             steps {
//                 echo "========executing Build======"
//                 script {
//                     gv.buildApp()
//                 }
//             }
//         }

//         stage("test") {
//             when {
//                 expression {
//                     params.executeTests
//                 }
//             }
//             steps {
//                 echo "========executing test========"
//                 // Uncomment the following line if needed
//                 // gv.testApp() 
//             }
//         }

//         stage("deploy") {
//             steps {
//                 echo "========executing deploy========"
//                 // Uncomment the following lines if needed
//                 // gv.deployApp()
//                 // echo "deploy with ${SERVER_CREDENTIALS} "
//                 // withCredentials([
//                 //   usernamePassword('server-credentials', usernameVariable: USER, passwordVariable: PWD )
//                 // ]){
//                 //   sh "some script ${USER} and ${PWD}"
//                 // }

//                 // echo 'deploying version ${params.VERSION}'
//             }
//         }
//     }
// }

// def gv

// pipeline {
//     agent any

//     stages {
//         stage("init") {
//             steps {
//                 echo 'Hello world'
//                 script {
//                    def gv = load "script.groovy"
//                     // gv.buildApp()
//                     // gv.testApp()
//                     // gv.deployApp()
//                 }
//             }
//         }
//     }
// }

def gv

pipeline {
    agent any

    stages {
        stage("Load and Execute Groovy Script") {
            steps {
                script {
                    // Load the Groovy script
                    def loadedScript = load "script.groovy"

                    // Check if the buildApp method is defined in the loaded script
                    if (loadedScript.respondsTo("buildApp")) {
                        // Execute the buildApp method
                        loadedScript.buildApp()
                    } else {
                        error "buildApp method not found in the loaded script"
                    }
                }
            }
        }
    }
}


